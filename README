cmsrel CMSSW_10_2_10
cd CMSSW_10_2_10/src
git clone https://github.com/gitytakahas/rJpsi.git


0. First, produce the Ntuples based on the instruction at 

https://github.com/UZHCMS/EXOVVNtuplizerRunII/tree/BcMu_10210_NoLepProducers

1. Make a flat ntuples 

cd flatter;

Inspect runTauDisplay_BcJpsiTauNu and see what is doing here. 
When you want to run on a single file, do, 

> python runTauDisplay_BcJpsiTauNu.py <-o outputfilename> <-p priority><-t type><-y year><-f inputfile>

-p option: you can choose either "pt" or "multiple". "pt" option will pick up the highest in pT that satisfies vertex prob > 10% and flight significance > 3 sigma (this can be changed). "multiple" option will pick up all the triplets per event
-t option: can be "data", "bg", "signal"
-y option: year. will be used for the pileup reweighting
-f option: input files. you can specify multiple files by comma separated way file1.root,file2.root,... (no space between "," and the next file)


If you are confident, you can now submit the job through T3. How to do it? You can see, for instance, 

> sh do.sh 

In this script, the output of the job submission will be directed to "/pnfs/psi.ch/cms/trivcat/store/user/ytakahas/RJpsi/" but you can choose wherever you want. 


2. Update ntuples 

> cd updateTuple;

(1) Hadd flat-ntuples produced in the previous step
(2) split the flat-ntuples into 20% and 80%. the former will be used for building analysis BDT, the latter is used for the actual analysis (e.g. building templates)

> sh do.sh



3. Building MVA based on the xgboost 

> cd $RJPSI/mva;
> sh do.sh 


4. add analysis MVA, build in the previous step, and produce the final ROOT files

> cd ../
> cd updateTuple; 
> sh application.sh 

this will produce the final tree at the directory, updateTuple/final_root_pt for instance. 


5. plotting 

If you don't have it yet, copy, 
> cp /t3home/ytakahas/.rootrc ~/.rootrc

> cp /t3home/ytakahas/rootlogon.C ~/

> mkdir ~/tool
> cp -r /t3home/ytakahas/tool ~/tool 

cd $RJPSI/anal
python draw.py 

the list of variables to be plotted is defined in varConfig.py 
